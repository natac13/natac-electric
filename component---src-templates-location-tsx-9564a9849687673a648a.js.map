{"version":3,"sources":["webpack:///./src/templates/Location.tsx"],"names":["useStyles","makeStyles","theme","root","width","minHeight","height","content","maxWidth","margin","spacing","padding","photos","display","gridTemplateColumns","gap","info","flexFlow","location","fontSize","typography","h2","fontWeight","color","palette","common","white","breakpoints","up","h1","contact","placeItems","address","phone","email","description","specialMessage","query","Location","props","classes","path","pageContext","data","pathname","className","fluid","bgImage","childImageSharp","alt","name","style","alignItems","filter","position","durationFadeIn","Tag","variant","component","align","gutterBottom","images","nodes","map","n","key","id","imgStyle"],"mappings":"4FAAA,oJAOMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,UAAW,QACXC,OAAQ,QAEVC,QAAS,CACPC,SAAU,QACVC,OAAWP,EAAMQ,QAAQ,GAAnB,WAAgCR,EAAMQ,QAAQ,GAA9C,KACNC,QAAST,EAAMQ,QAAQ,EAAG,IAE5BE,OAAQ,CACND,QAAST,EAAMQ,QAAQ,EAAG,GAC1BG,QAAS,OACTC,oBAAqB,uCACrBL,OAAWP,EAAMQ,QAAQ,GAAnB,UACNK,IAAKb,EAAMQ,QAAQ,GAAK,MAE1BM,KAAM,CACJH,QAAS,OACTI,SAAU,SACVb,MAAO,QAETc,UAAQ,GACNC,SAAUjB,EAAMkB,WAAWC,GAAGF,SAC9BG,WAAY,IACZC,MAAOrB,EAAMsB,QAAQC,OAAOC,OAHtB,KAIFxB,EAAMyB,YAAYC,GAAG,OAAU,CACjCT,SAAUjB,EAAMkB,WAAWS,GAAGV,UAL1B,KAOFjB,EAAMyB,YAAYC,GAAG,OAAU,CACjCT,SAAU,SARN,GAWRW,QAAS,CACPrB,OAAQP,EAAMQ,QAAQ,EAAG,GACzBG,QAAS,OACTC,oBAAqB,uCACrBiB,WAAY,gBACZ3B,MAAO,QAET4B,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,YAAa,GACbC,eAAgB,OAoHLC,EAAQ,aAyBNC,UAvG0B,SAACC,GACxC,IAAMC,EAAUxC,IACRyC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KAEzBzB,EAMEwB,EANFxB,SACAiB,EAKEO,EALFP,YACAD,EAIEQ,EAJFR,MACAD,EAGES,EAHFT,MACAG,EAEEM,EAFFN,eACAJ,EACEU,EADFV,QAGF,OACE,kBAAC,IAAD,CAAQY,SAAUH,GAChB,6BAASI,UAAWL,EAAQrC,MAC1B,kBAAC,IAAD,CACE2C,MAAOH,EAAKI,QAAQC,gBAAgBF,MACpCG,IAAKN,EAAKI,QAAQG,KAClBC,MAAO,CACL/C,MAAO,QACPE,OAAQ,OACRO,QAAS,OACTuC,WAAY,WACZC,OAAQ,kBACRC,SAAU,WACV3C,QAAS,cACTY,MAAO,QAETgC,eAAgB,IAChBC,IAAI,WAEJ,yBAAKX,UAAWL,EAAQxB,MACtB,kBAAC,IAAD,CAAYyC,QAAQ,KAAKZ,UAAWL,EAAQtB,UACzCA,KAIP,yBAAK2B,UAAWL,EAAQV,SACtB,kBAAC,IAAD,CAAY4B,UAAU,KAAKb,UAAWL,EAAQR,SAC3CA,GAEH,kBAAC,IAAD,CAAY0B,UAAU,KAAKb,UAAWL,EAAQP,OAC3CA,GAEH,kBAAC,IAAD,CAAYyB,UAAU,KAAKb,UAAWL,EAAQN,OAC3CA,IAGL,yBAAKW,UAAWL,EAAQjC,SACtB,kBAAC,IAAD,CACEkD,QAAQ,KACRE,MAAM,SACNC,cAAY,GAHd,6BAI+B1C,GAC/B,kBAAC,IAAD,CAAYwC,UAAU,IAAIb,UAAWL,EAAQL,aAC1CA,GAEH,kBAAC,IAAD,CAAYuB,UAAU,IAAIb,UAAWL,EAAQJ,gBAC1CA,IAGL,yBAAKS,UAAWL,EAAQ5B,QACrB+B,EAAKkB,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACrB,kBAAC,IAAD,CACElB,MAAOkB,EAAEhB,gBAAgBF,MACzBG,IAAKe,EAAEd,KACPe,IAAKD,EAAEE,GACPC,SAAU,CACR7D,OAAQ","file":"component---src-templates-location-tsx-9564a9849687673a648a.js","sourcesContent":["import React from 'react'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport Layout from '../components/Layout'\nimport { PageProps, graphql } from 'gatsby'\nimport BackgroundImage from 'gatsby-background-image'\nimport Img, { FluidObject } from 'gatsby-image'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    minHeight: '100vh',\n    height: 'auto',\n  },\n  content: {\n    maxWidth: '700px',\n    margin: `${theme.spacing(4)}px auto ${theme.spacing(6)}px`,\n    padding: theme.spacing(0, 2),\n  },\n  photos: {\n    padding: theme.spacing(0, 6),\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(14rem, 1fr))',\n    margin: `${theme.spacing(4)}px auto`,\n    gap: theme.spacing(6) + 'px',\n  },\n  info: {\n    display: 'flex',\n    flexFlow: 'column',\n    width: '88vw',\n  },\n  location: {\n    fontSize: theme.typography.h2.fontSize,\n    fontWeight: 900,\n    color: theme.palette.common.white,\n    [`${theme.breakpoints.up('sm')}`]: {\n      fontSize: theme.typography.h1.fontSize,\n    },\n    [`${theme.breakpoints.up('lg')}`]: {\n      fontSize: '10rem',\n    },\n  },\n  contact: {\n    margin: theme.spacing(4, 0),\n    display: 'grid',\n    gridTemplateColumns: `repeat(auto-fit, minmax(16rem, 1fr))`,\n    placeItems: 'center center',\n    width: '100%',\n  },\n  address: {},\n  phone: {},\n  email: {},\n  description: {},\n  specialMessage: {},\n}))\n\ninterface Data {\n  data: {\n    bgImage: {\n      id: string\n      name: string\n      childImageSharp: {\n        fluid: FluidObject\n      }\n    }\n    images: {\n      nodes: {\n        name: string\n        id: string\n        childImageSharp: {\n          fluid: FluidObject\n        }\n      }[]\n    }\n  }\n}\n\ninterface Props extends PageProps {\n  pageContext: {\n    description: string\n    email: string\n    id: string\n    location: string\n    phone: string\n    slug: string\n    specialMessage: string\n    kebabCase: string\n    address: string\n  }\n}\n\nconst Location: React.FC<Props & Data> = (props: Props & Data) => {\n  const classes = useStyles()\n  const { path, pageContext, data } = props\n  const {\n    location,\n    description,\n    email,\n    phone,\n    specialMessage,\n    address,\n  } = pageContext\n\n  return (\n    <Layout pathname={path}>\n      <section className={classes.root}>\n        <BackgroundImage\n          fluid={data.bgImage.childImageSharp.fluid}\n          alt={data.bgImage.name}\n          style={{\n            width: '100vw',\n            height: '80vh',\n            display: 'flex',\n            alignItems: 'flex-end',\n            filter: 'brightness(0.9)',\n            position: 'relative',\n            padding: '0 0 6vh 6vw',\n            color: '#fff',\n          }}\n          durationFadeIn={300}\n          Tag=\"section\"\n        >\n          <div className={classes.info}>\n            <Typography variant=\"h1\" className={classes.location}>\n              {location}\n            </Typography>\n          </div>\n        </BackgroundImage>\n        <div className={classes.contact}>\n          <Typography component=\"h2\" className={classes.address}>\n            {address}\n          </Typography>\n          <Typography component=\"h2\" className={classes.phone}>\n            {phone}\n          </Typography>\n          <Typography component=\"h2\" className={classes.email}>\n            {email}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <Typography\n            variant=\"h2\"\n            align=\"center\"\n            gutterBottom\n          >{`Welcome to Natac Electric ${location}`}</Typography>\n          <Typography component=\"p\" className={classes.description}>\n            {description}\n          </Typography>\n          <Typography component=\"p\" className={classes.specialMessage}>\n            {specialMessage}\n          </Typography>\n        </div>\n        <div className={classes.photos}>\n          {data.images.nodes.map((n) => (\n            <Img\n              fluid={n.childImageSharp.fluid}\n              alt={n.name}\n              key={n.id}\n              imgStyle={{\n                height: 'auto',\n              }}\n            />\n          ))}\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query LocationPage($regex: String, $bgImageName: String) {\n    bgImage: file(name: { eq: $bgImageName }) {\n      name\n      id\n      childImageSharp {\n        fluid(maxWidth: 1200) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    images: allFile(filter: { name: { ne: $bgImageName, regex: $regex } }) {\n      nodes {\n        name\n        id\n        childImageSharp {\n          fluid(maxWidth: 600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Location\n"],"sourceRoot":""}